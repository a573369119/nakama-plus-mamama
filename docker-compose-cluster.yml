version: '3.8'

services:
  # CockroachDB 数据库
  cockroachdb:
    image: cockroachdb/cockroach:latest-v24.1
    command: start-single-node --insecure --store=attrs=ssd,path=/var/lib/cockroach/
    restart: "no"
    volumes:
      - data:/var/lib/cockroach
    expose:
      - "8080"
      - "26257"
    ports:
      - "26257:26257"
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 3s
      timeout: 3s
      retries: 5

  # Nakama Plus 节点1
  nakama1:
    image: nakama-plus:latest
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
          /app/nakama migrate up --database.address root@cockroachdb:26257 &&
          exec /app/nakama --name nakama1 --database.address root@cockroachdb:26257 --logger.level DEBUG --session.token_expiry_sec 7200 --metrics.prometheus_port 9100 --runtime.path /app/data/modules --cluster.enable true --cluster.gossip_bind_addr 0.0.0.0:7350 --cluster.port 7351 --cluster.discovery.static.servers nakama1:7351,nakama2:7351,nakama3:7351
    restart: "no"
    links:
      - "cockroachdb:db"
    depends_on:
      cockroachdb:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./cluster-config.yml:/app/config.yml
    expose:
      - "7349"
      - "7350"
      - "7351"
      - "9100"
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    healthcheck:
      test: ["CMD", "/app/nakama", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nakama Plus 节点2
  nakama2:
    image: nakama-plus:latest
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
          exec /app/nakama --name nakama2 --database.address root@cockroachdb:26257 --logger.level DEBUG --session.token_expiry_sec 7200 --metrics.prometheus_port 9101 --runtime.path /app/data/modules --cluster.enable true --cluster.gossip_bind_addr 0.0.0.0:7350 --cluster.port 7351 --cluster.discovery.static.servers nakama1:7351,nakama2:7351,nakama3:7351
    restart: "no"
    links:
      - "cockroachdb:db"
    depends_on:
      cockroachdb:
        condition: service_healthy
      nakama1:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./cluster-config.yml:/app/config.yml
    expose:
      - "7349"
      - "7350"
      - "7351"
      - "9101"
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    healthcheck:
      test: ["CMD", "/app/nakama", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nakama Plus 节点3
  nakama3:
    image: nakama-plus:latest
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
          exec /app/nakama --name nakama3 --database.address root@cockroachdb:26257 --logger.level DEBUG --session.token_expiry_sec 7200 --metrics.prometheus_port 9102 --runtime.path /app/data/modules --cluster.enable true --cluster.gossip_bind_addr 0.0.0.0:7350 --cluster.port 7351 --cluster.discovery.static.servers nakama1:7351,nakama2:7351,nakama3:7351
    restart: "no"
    links:
      - "cockroachdb:db"
    depends_on:
      cockroachdb:
        condition: service_healthy
      nakama1:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./cluster-config.yml:/app/config.yml
    expose:
      - "7349"
      - "7350"
      - "7351"
      - "9102"
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    healthcheck:
      test: ["CMD", "/app/nakama", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus 监控
  prometheus:
    image: prom/prometheus
    entrypoint: /bin/sh -c
    command: |
      'sh -s <<EOF
        cat > ./prometheus.yml <<EON
      global:
        scrape_interval:     15s
        evaluation_interval: 15s

      scrape_configs:
        - job_name: prometheus
          static_configs:
          - targets: ['localhost:9090']

        - job_name: nakama1
          metrics_path: /
          static_configs:
          - targets: ['nakama1:9100']

        - job_name: nakama2
          metrics_path: /
          static_configs:
          - targets: ['nakama2:9101']

        - job_name: nakama3
          metrics_path: /
          static_configs:
          - targets: ['nakama3:9102']
      EON
      prometheus --config.file=./prometheus.yml
      EOF'
    ports:
      - '9090:9090'

volumes:
  data: